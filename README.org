#+STARTUP: latexpreview

* LeetCode 题解

- Language: Python3

- Solved: [85/-]

** Record

|  # | Title                                          | Solution                      | Times |
|----+------------------------------------------------+-------------------------------+-------|
| 99 | [[https://leetcode-cn.com/problems/recover-binary-search-tree/][Recover Binary Search Tree]]                     | [[recover_bst.py]]                |     1 |
| 98 | [[https://leetcode-cn.com/problems/validate-binary-search-tree/][Validate Binary Search Tree]]                    | [[is_valid_bst.py]]               |     8 |
| 97 | [[https://leetcode-cn.com/problems/interleaving-string/][Interleaving String]]                            | [[interleaving_string.py]]        |       |
| 96 | [[https://leetcode-cn.com/problems/unique-binary-search-trees/][Unique Binary Search Trees]]                     | [[unique_binary_search_tree2.py]] |       |
| 95 | [[https://leetcode-cn.com/problems/unique-binary-search-trees-ii/][Unique Binary Search Trees2]]                    | [[unique_binary_search_tree.py]]  |       |
| 94 | [[https://leetcode-cn.com/problems/binary-tree-inorder-traversal/][Binary Tree Inorder Traversal]]                  | [[inorder_traversal.py]]          |       |
| 93 | [[https://leetcode-cn.com/problems/restore-ip-addresses/][Restore IP Address]]                             | [[restore_ip_address.py]]         |       |
| 92 | [[https://leetcode-cn.com/problems/reverse-linked-list-ii/][Reverse Linked List 2]]                          | [[reverse_linked_list.py]]        |       |
| 91 | [[https://leetcode-cn.com/problems/decode-ways/][Decode Ways]]                                    | [[decode_ways.py]]                |       |
| 90 | [[https://leetcode-cn.com/problems/subsets-ii/][Subsets 2]]                                      | [[subsets_2.py]]                  |       |
| 89 | [[https://leetcode-cn.com/problems/gray-code/][Gray Code]]                                      | [[gray_code.py]]                  |       |
| 88 | [[https://leetcode-cn.com/problems/merge-sorted-array/][Merge Sorted Array]]                             | [[merge_sorted_array.py]]         |       |
| 86 | [[https://leetcode-cn.com/problems/partition-list/][Partition List]]                                 | [[partition_list.py]]             |       |
| 85 | [[https://leetcode-cn.com/problems/maximal-rectangle/][Maximal Rectangle]]                              | [[maximal_rectangle.py]]          |       |
| 84 | [[https://leetcode-cn.com/problems/largest-rectangle-in-histogram/][Largest Rectangle in Histogram]]                 | [[largest_rectangle_area.py]]     |       |
| 83 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/][Remove Duplicates from Sorted Arrays 3]]         | [[remove_duplicates4.py]]         |       |
| 82 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/][Remove Duplicates from Sorted Arrays 2]]         | [[remove_duplicates3.py]]         |       |
| 81 | [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/][Search in Rotated Sorted Arrays 2]]              | [[search_in_sorted_array2.py]]    |       |
| 80 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/][Remove Duplicates from Sorted Arrays]]           | [[remove_duplicates2.py]]         |       |
| 79 | [[https://leetcode-cn.com/problems/word-search/][Word Search]]                                    | [[word_search.py]]                |       |
| 78 | [[https://leetcode-cn.com/problems/subsets/][Subsets]]                                        | [[subsets.py]]                    |       |
| 77 | [[https://leetcode-cn.com/problems/combinations/][Combinations]]                                   | [[combine.py]]                    |       |
| 76 | [[https://leetcode-cn.com/problems/minimum-window-substring/][Minimum Window Substring]]                       | [[min_window.py]]                 |       |
| 75 | [[https://leetcode-cn.com/problems/sort-colors/submissions/][Sort Color]]                                     | [[sort_color.py]]                 |       |
| 74 | [[https://leetcode-cn.com/problems/search-a-2d-matrix/][Search a 2D Matrix]]                             | [[search_matrix.py]]              |       |
| 73 | [[https://leetcode-cn.com/problems/set-matrix-zeroes/][Set Matrix Zeros]]                               | [[set_zeros.py]]                  |       |
| 72 | [[https://leetcode-cn.com/problems/edit-distance/][Edit Distance]]                                  | [[edit_distance.py]]              |       |
| 71 | [[https://leetcode-cn.com/problems/simplify-path/][Simplify Path]]                                  | [[simplify_path.py]]              |       |
| 70 | [[https://leetcode-cn.com/problems/climbing-stairs/][Climbing Stairs]]                                | [[climbing_stairs.py]]            |       |
| 69 | [[https://leetcode-cn.com/problems/sqrtx/][Sqrt(x)]]                                        | [[my_sqrt.py]]                    |       |
| 68 | [[https://leetcode-cn.com/problems/text-justification/][Text Justification]]                             | [[text_justification.py]]         |       |
| 67 | [[https://leetcode-cn.com/problems/add-binary/][Add Binary]]                                     | [[add_binary.py]]                 |       |
| 66 | [[https://leetcode-cn.com/problems/plus-one/][Plus One]]                                       | [[plus_one.py]]                   |       |
| 65 | [[https://leetcode-cn.com/problems/valid-number/][Valid Number]]                                   | [[valid_number.py]]               |       |
| 64 | [[https://leetcode-cn.com/problems/minimum-path-sum/][Minimum Path Sum]]                               | [[min_path_sum.py]]               |       |
| 63 | [[https://leetcode-cn.com/problems/unique-paths-ii/][Unique Paths 2]]                                 | [[unique_path2.py]]               |       |
| 62 | [[https://leetcode-cn.com/problems/unique-paths/submissions/][Unique Paths]]                                   | [[unique_path.py]]                |       |
| 61 | [[https://leetcode-cn.com/problems/rotate-list/][Rotate List]]                                    | [[rotate_list.py]]                |       |
| 60 | [[https://leetcode-cn.com/problems/permutation-sequence/][Permutation Sequence]]                           | [[permutation_sequence.py]]       |       |
| 59 | [[https://leetcode-cn.com/problems/spiral-matrix-ii/][Spiral Matrix 2]]                                | [[generate_matrix.py]]            |       |
| 58 | [[https://leetcode-cn.com/problems/length-of-last-word/][Length of Last Word]]                            | [[length_of_last_word.py]]        |       |
| 57 | [[https://leetcode-cn.com/problems/insert-interval/][Insert Interval]]                                | [[insert_intervals.py]]           |       |
| 56 | [[https://leetcode-cn.com/problems/merge-intervals/][Merge Intervals]]                                | [[merge_intervals.py]]            |       |
| 55 | [[https://leetcode-cn.com/problems/jump-game/][Jump Game]]                                      | [[jump_game.py]]                  |       |
| 54 | [[https://leetcode-cn.com/problems/spiral-matrix/][Spiral Matrix]]                                  | [[spiral_order.py]]               |       |
| 53 | [[https://leetcode-cn.com/problems/maximum-subarray/][Maximum Subarray]]                               | [[max_sub_array.py]]              |       |
| 52 | [[https://leetcode-cn.com/problems/n-queens-ii/][N Queens 2]]                                     | [[solve_n_queens_2.py]]           |       |
| 51 | [[https://leetcode-cn.com/problems/n-queens/][N Queens]]                                       | [[solve_n_queens.py]]             |       |
| 50 | [[https://leetcode-cn.com/problems/powx-n/submissions/][Pow]]                                            | [[my_pow.py]]                     |       |
| 49 | [[https://leetcode-cn.com/problems/group-anagrams/][group_anagrams.py]]                              | [[group_anagrams.py]]             |       |
| 48 | [[https://leetcode-cn.com/problems/rotate-image/][Rotate Image]]                                   | [[rotate.py]]                     |       |
| 47 | [[https://leetcode-cn.com/problems/permutations-ii/submissions/][Permutations 2]]                                 | [[permute_2.py]]                  |       |
| 46 | [[https://leetcode-cn.com/problems/permutations/submissions/][Permutations]]                                   | [[permute.py]]                    |       |
| 45 | [[https://leetcode-cn.com/problems/jump-game-ii/submissions/][Jump Game 2]]                                    | [[jump_game_2.py]]                |       |
| 44 | [[https://leetcode-cn.com/problems/wildcard-matching/submissions/][Wildcard Matching]]                              | [[wildcard_matching.py]]          |       |
| 43 | [[https://leetcode-cn.com/problems/multiply-strings/][Multiply Strings]]                               | [[multiply_strings.py]]           |       |
| 42 | [[https://leetcode-cn.com/problems/trapping-rain-water/submissions/][Trapping Rain Water]]                            | [[trapping_rain_water.py]]        |       |
| 41 | [[https://leetcode-cn.com/problems/first-missing-positive/][First Missing Positive]]                         | [[first_missing_positive.py]]     |       |
| 40 | [[https://leetcode-cn.com/problems/combination-sum-ii/][Combination Sum 2]]                              | [[combination_sum2.py]]           |       |
| 39 | [[https://leetcode-cn.com/problems/combination-sum/][Combination Sum]]                                | [[combination_sum.py]]            |       |
| 38 | [[https://leetcode-cn.com/problems/count-and-say/submissions/][Count and Say]]                                  | [[count_and_say.py]]              |       |
| 37 | [[https://leetcode-cn.com/problems/sudoku-solver/][Sudoku Solver]]                                  | [[solve_sodoku.py]]               |       |
| 36 | [[https://leetcode-cn.com/problems/valid-sudoku/][Valid Sudoku]]                                   | [[valid_sudoku.py]]               |       |
| 35 | [[https://leetcode-cn.com/problems/search-insert-position/][Search insert Position]]                         | [[search_insert.py]]              |       |
| 34 | [[https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/submissions/][Find First and Last Element in sorted array]]    | [[search_range.py]]               |       |
| 33 | [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array/][Search in Rotated Sorted Array]]                 | [[search_in_sorted_array.py]]     |       |
| 32 | [[https://leetcode-cn.com/problems/longest-valid-parentheses/][Largest Valid Parentheses]]                      | [[largest_valid_parenteses.py]]   |       |
| 31 | [[https://leetcode-cn.com/problems/next-permutation/][Next Permutation]]                               | [[next_permutation.py]]           |       |
| 30 | [[https://leetcode-cn.com/problems/substring-with-concatenation-of-all-words/submissions/][Substring with Concatenation of All Words]]      | [[find_substring.py]]             |       |
| 29 | [[https://leetcode-cn.com/problems/divide-two-integers/][Divide Two Integers]]                            | [[divide.py]]                     |       |
| 28 | [[https://leetcode-cn.com/problems/implement-strstr/][Implement strStr()]]                             | -                             |       |
| 27 | [[https://leetcode-cn.com/problems/remove-element/][Remove Element]]                                 | -                             |       |
| 26 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/][Remove Duplicates from Sorted Array]]            | [[remove_duplicates.py]]          |       |
| 25 | [[https://leetcode-cn.com/problems/reverse-nodes-in-k-group/][Reverse Nodes in k-Group]]                       | [[reverse_k_group.py]]            |       |
| 24 | [[https://leetcode-cn.com/problems/swap-nodes-in-pairs/][Swap Nodes in Pairs]]                            | [[swap_pairs.py]]                 |       |
| 23 | [[https://leetcode-cn.com/problems/merge-k-sorted-lists/][Merge k Sorted Lists]]                           | [[merge_k_list.py]]               |       |
| 22 | [[https://leetcode-cn.com/problems/generate-parentheses/][Generate Parentheses]]                           | [[generate_parenthesis.py]]       |       |
| 21 | [[https://leetcode-cn.com/problems/merge-two-sorted-lists/][Merge Two Sorted Lists]]                         | [[merge_two_list.py]]             |       |
| 20 | [[https://leetcode-cn.com/problems/valid-parentheses/][Valid Parentheses]]                              | [[is_valid.py]]                   |       |
| 19 | [[https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/][Remove Nth Node From End of List]]               | [[remove_nth_from_end.py]]        |       |
| 18 | [[https://leetcode-cn.com/problems/4sum/][4Sum]]                                           | [[four_sum.py]]                   |       |
| 17 | [[https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/][Letter Combination of a Phone Number]]           | [[letter_combination.py]]         |       |
| 16 | [[https://leetcode-cn.com/problems/3sum-closest/][3Sum Closest]]                                   | [[three_sum_closest.py]]          |       |
| 15 | [[https://leetcode-cn.com/problems/3sum/][3Sum]]                                           | [[three_sum.py]]                  |       |
| 14 | [[https://leetcode-cn.com/problems/longest-common-prefix/][Longest Common Prefix]]                          | [[longest_common_prefix.py]]      |       |
| 13 | [[https://leetcode-cn.com/problems/roman-to-integer/][Roman to Integer]]                               | [[roman_to_int.py]]               |       |
| 12 | [[https://leetcode-cn.com/problems/integer-to-roman/][Integer to Roman]]                               | [[int_to_roman.py]]               |       |
| 11 | [[https://leetcode-cn.com/problems/container-with-most-water/][Container With Most Water]]                      | [[max_area.py]]                   |       |
| 10 | [[https://leetcode-cn.com/problems/regular-expression-matching/][Regular Expression Matching]]                    | [[is_match.py]]                   |       |
|  9 | [[https://leetcode-cn.com/problems/palindrome-number/][Palindrome]]                                     | [[is_palindrome.py]]              |       |
|  8 | [[https://leetcode-cn.com/problems/string-to-integer-atoi/][String to Integer]]                              | [[my_atoi.py]]                    |       |
|  7 | [[https://leetcode-cn.com/problems/reverse-integer/][Reverse Integer]]                                | [[reverse_int.py]]                |       |
|  6 | [[https://leetcode-cn.com/problems/zigzag-conversion/][ZigZag Conversion]]                              | [[zigzag-conversion.py]]          |       |
|  5 | [[https://leetcode-cn.com/problems/longest-palindromic-substring/][Longest Palindromic SubString]]                  | [[longest_palindrome.py]]         |       |
|  4 | [[https://leetcode-cn.com/problems/median-of-two-sorted-arrays/][Median of Two Sorted Arrays]]                    | [[find_median_sorted_array.py]]   |       |
|  3 | [[https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/][Longest Substring Without Repeating Characters]] | [[longest_substr.py]]             |       |
|  2 | [[https://leetcode-cn.com/problems/add-two-numbers/][Add Two Numbers]]                                | -                             |       |
|  1 | [[https://leetcode-cn.com/problems/two-sum/][Two Sum]]                                        | [[twosum.py]]                     |       |

** 思路笔记
*** 99 Recover Binary Search Tree
因为二叉搜索树的中序排序数组是有序数组，因此，这个问题可以分解为两个子问题：
1. 中序排序
2. 查找一次交换元素的有序数组中交换的那两个元素，并还原

*** 95 Unique Binary Search Tree
最开始我想到的是方法是：从 $1 \cdots n$ 中依次取数 $i$ ，将 $i$ 插入到已经排序好的二叉查询树 $1 \cdots i-1 \cdots i+1 \cdots n$ 中。依据此思想可以写出递推式，我也做了实现，但是结果会有重复，暂时没有想到去重的方法。

第二种方法是看了题解，恍然大悟，利用二叉查询树的性质，比 $i$ 小的数都在 $i$ 的左边，比 $i$ 大的数都在 $i$ 的右边。

*** 91 Decode Ways
本题解法参考自 [[https://leetcode-cn.com/problems/decode-ways/solution/c-wo-ren-wei-hen-jian-dan-zhi-guan-de-jie-fa-by-pr/][algos]] 。

另外，我自己也有一种 DP 的解法，但是和上诉方法相比实现起来太麻烦了。
#+BEGIN_CENTER
#+ATTR_HTML: :width 80%
[[file:../img/91_1.png]]
#+END_CENTER
#+BEGIN_CENTER
#+ATTR_HTML: :width 80%
[[file:../img/91_2.png]]
#+END_CENTER

*** 85 Maximal Rectangle
如果我们将这个矩形按行来分割，那么，每行之上的数据都可以看作是 #84 中的一个矩形图问题。

此方法看过题解，[[https://leetcode-cn.com/problems/maximal-rectangle/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-1-8/][详细通俗的思路分析]]。

*** 84 Largest Rectangle in Histogram
*** 76 Minimum Window Substring
这里我一直超时的问题是，在更新左指针时，没有记录上一次更新右指针时已经记录的现有字符信息。

*** 75 Color Search
想一个小技巧，能在一次遍历中完成题目要求。可以考虑三个标志位，分别记录三个颜色的第一次出现的位置，在此基础上可以思考出正解。

*** 72 Minimum Edit Distance
Edit Distance 是经典的动态规划问题，主要思想就是：将两个单词 =word1, word2= 最后一位对齐，从后向前比较。如果两个单词最后一位相同，那么多这一位并不影响 Edit Distance，所以其 ED 等于 =ED(m-1, n-1)= ；如果最后一位不同，那么多的一位可能有三种情况：
- 被删除 =ED(m-1, n)=
- 修改 =ED(m-1, n-1)=
- 被添加 =ED(m, n-1)=

*** 46 47 Permutation
动态规划和剪枝优化的问题。

*** 45 Jump Game 2
贪心问题。这个动态规划问题需要使用贪心算法解决才能满足时间条件。

贪心思想：每次跳的位置要么是直接达到目的地，要么是下次能跳的最远的地方。

*** 44 Wildcard Matching
本题是动态规划问题，思考写出其迭代式：

\[
dp(i, j) = \begin{cases}
dp(i+1, j+1), & \text{if } s[i] == p[j] \text{ or } p[j] == '?'; \\
False, & \text{if } s[i] \neq p[j]; \\
dp(i, j+1) \text{ or } dp(i+1, j) \text{ or } dp(i+1, j+1), & \text{if } p[j] == '*'.
\end{cases}
\]

其中，\(dp(i, j)\)表示\(s[i:]\)与\(p[j:]\)是否匹配。

如果直接使用递归方法，不能通过所有测试用例，原因是耗时过多。改进的方法有：
- 使用缓存，保存已经计算过的 dp 值
- 使用迭代方法

迭代方法需要添加多的一行和一列的表格。不妨设有 =len(s)+1= 列和 =len(p)+1= 行；那么：
- 第 =len(s)+1= 列表示 s 序列为空时， =p[j:]= 是否可以匹配（只有当 =p[j:]= 都是 '*'时可以匹配）
- 第 =len(p)+1= 行表示 p 序列为空时，能否匹配 s 序列，当然都是 False

*** 42 Trapping Rain Water
思路：

\begin{equation*}
\begin{split}
res[i] = \max(0, \min(\max(left), \max(right)) - heights[i])
\end{split}
\end{equation*}

找左边、右边最大高度可以使用动态规划。

\begin{equation*}
\begin{split}
left[i] &= \max(height[i-1], left[i-1])\\
right[i] &= \max(height[i+1], right[i+1])
\end{split}
\end{equation*}

*** 41 First Missing Positive
这道题算是技巧题目，没有固定的题型。
- 此题的题解范围为：1 ~ n+1
- 可以原地做标记表示某个数是否在数组中出现过
- 使用位置 0 判断数字 n 是否出现过

*** 40 Combination Sum 2
典型的动态规划题型。

\[
dp(t, p) = \begin{cases}
dp(t-nums[p], p-1).append(nums[p]) \\
dp[t, p - 1]
\end{cases}
\]

如果使用迭代算法需要二维数组保存中间结果。
