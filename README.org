#+STARTUP: latexpreview

* LeetCode 题解

- Language: Python3

- Solved: [99/-]

** Record

|   # | Title                                                      | Solution                      | Times |
|-----+------------------------------------------------------------+-------------------------------+-------|
| 153 | [[https://leetcode-cn.com/problems/find-minimum-in-rotated-sorted-array/][Find Minimum in Rotated Sorted Array]]                       | [[find_min_in_rotated_array.py]]  |     1 |
| 152 | [[https://leetcode-cn.com/problems/maximum-product-subarray/][Maximum Product Subarray]]                                   | [[max_product.py]]                |     4 |
| 151 | [[https://leetcode-cn.com/problems/reverse-words-in-a-string/][Reverse Words in a String]]                                  | [[reverse_words.py]]              |     3 |
| 150 | [[https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/][Evaluate Reverse Polish Notation]]                           | [[eval_epn.py]]                   |     4 |
| 149 | [[https://leetcode-cn.com/problems/max-points-on-a-line/][Max Points on a Line]]                                       | [[max_points.py]]                 |     4 |
| 148 | [[https://leetcode-cn.com/problems/sort-list/][Sort List]]                                                  | [[sort_list.py]]                  |     2 |
| 147 | [[https://leetcode-cn.com/problems/insertion-sort-list/][Insertion Sort List]]                                        | [[insertion_sort_list.py]]        |     1 |
| 146 | [[https://leetcode-cn.com/problems/lru-cache/][LRU Cache]]                                                  | [[lru_cache.py]]                  |     4 |
| 145 | [[https://leetcode-cn.com/problems/binary-tree-postorder-traversal/][Binary Tree Postorder Traversal]]                            | [[postorder_traversal.py]]        |     1 |
| 144 | [[https://leetcode-cn.com/problems/binary-tree-preorder-traversal/][Binary Tree Preorder Traversal]]                             | [[preorder_traversal.py]]         |     1 |
| 143 | [[https://leetcode-cn.com/problems/reorder-list/][Reorder List]]                                               | [[reorder_list.py]]               |     2 |
| 142 | [[https://leetcode-cn.com/problems/linked-list-cycle-ii/submissions/][Linked List Cycle II]]                                       | [[list_cycle2.py]]                |     1 |
| 141 | [[https://leetcode-cn.com/problems/linked-list-cycle/][Linked List Cycle]]                                          | [[list_cycle.py]]                 |     1 |
| 140 | [[https://leetcode-cn.com/problems/word-break-ii/][Word Break II]]                                              | [[word_break2.py]]                |     N |
| 139 | [[https://leetcode-cn.com/problems/word-break/][Word Break]]                                                 | [[word_break.py]]                 |     1 |
| 138 | [[https://leetcode-cn.com/problems/copy-list-with-random-pointer/][Copy List with Random Pointer]]                              | [[copy_random_list.py]]           |     2 |
| 137 | [[https://leetcode-cn.com/problems/single-number-ii/][Single Number II]]                                           | [[single_number2.py]]             |     1 |
| 136 | [[https://leetcode-cn.com/problems/single-number/][Single Number]]                                              | [[single_number.py]]              |     4 |
| 135 | [[https://leetcode-cn.com/problems/candy/][Candy]]                                                      | [[candy.py]]                      |     4 |
| 134 | [[https://leetcode-cn.com/problems/gas-station/][Gas Station]]                                                | [[gas_station.py]]                |     1 |
| 133 | [[https://leetcode-cn.com/problems/clone-graph/][Clone Graph]]                                                | [[clone_graph.py]]                |     1 |
| 132 | [[https://leetcode-cn.com/problems/palindrome-partitioning-ii/][Palindrome Partitioning II]]                                 | [[min_cut_palindrome.py]]         |     3 |
| 131 | [[https://leetcode-cn.com/problems/palindrome-partitioning/][Palindrome Partitioning]]                                    | [[palindrome_partition.py]]       |     1 |
| 130 | [[https://leetcode-cn.com/problems/surrounded-regions/][Surrounded Regions]]                                         | [[surrounded_regions.py]]         |     3 |
| 129 | [[https://leetcode-cn.com/problems/sum-root-to-leaf-numbers/][Sum Root to Leaf Numbers]]                                   | [[sum_root_of_numbers.py]]        |     1 |
| 128 | [[https://leetcode-cn.com/problems/longest-consecutive-sequence/][Longest Consecutive Sequence]]                               | [[longest_consecutive.py]]        |     1 |
| 126 | [[https://leetcode-cn.com/problems/word-ladder-ii/][Word Ladder II]]                                             | [[word_ladder.py]]                |     4 |
| 125 | [[https://leetcode-cn.com/problems/valid-palindrome/][Valid Palindrome]]                                           | [[is_palindrome_2.py]]            |     2 |
| 124 | [[https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/][Binary Tree Maximum Path Sum]]                               | [[max_path_sum.py]]               |     3 |
| 123 | [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/][Best Time to Buy and Sell Stock III]]                        | [[max_profit3.py]]                |     3 |
| 122 | [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/][Best Time to Buy and Sell Stock II]]                         | [[max_profit2.py]]                |     2 |
| 121 | [[https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/][Best Time to Buy and Sell Stock]]                            | [[max_profit.py]]                 |     1 |
| 120 | [[https://leetcode-cn.com/problems/triangle/][Triangle]]                                                   | [[minimum_path_sum.py]]           |     2 |
| 119 | [[https://leetcode-cn.com/problems/pascals-triangle-ii/][Pascal's Triangle II]]                                       | [[pascal_triangle2.py]]           |     1 |
| 118 | [[https://leetcode-cn.com/problems/pascals-triangle/][Pascal's Triangle]]                                          | [[pascal_triangle.py]]            |     2 |
| 117 | [[https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/][Populating Next Right Pointers in Each Node II]]             | [[connect_next2.py]]              |     1 |
| 116 | [[https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/][Populating Next Right Pointers in Each Node]]                | [[connect_next.py]]               |     1 |
| 115 | [[https://leetcode-cn.com/problems/distinct-subsequences/][Distinct Sunsequences]]                                      | [[num_distinct.py]]               |     4 |
| 114 | [[https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/][Flatten Binary Tree to Linked List]]                         | [[flatten_bst.py]]                |     1 |
| 113 | [[https://leetcode-cn.com/problems/path-sum-ii/][Path Sum II]]                                                | [[find_path_sum.py]]              |     1 |
| 112 | [[https://leetcode-cn.com/problems/path-sum/][Path Sum]]                                                   | [[has_path_sum.py]]               |     5 |
| 111 | [[https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/][Minimum Depth of Binary Tree]]                               | [[min_depth.py]]                  |     3 |
| 110 | [[https://leetcode-cn.com/problems/balanced-binary-tree/][Balanced Binary Tree]]                                       | [[is_balanced.py]]                |     1 |
| 109 | [[https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/][Convert Sorted List to Binary Search Tree]]                  | [[sorted_linked_list_to_bst.py]]  |     1 |
| 108 | [[https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/][Convert Sorted Array to Binary Search Tree]]                 | [[sorted_array_to_bst.py]]        |     1 |
| 107 | [[https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/][Binary Tree Level Order Traversal II]]                       | [[level_order_bottom.py]]         |     1 |
| 106 | [[https://leetcode-cn.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/][Construct Binary Tree from Inorder and Postorder Traversal]] | [[build_tree2.py]]                |     1 |
| 105 | [[https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/][Construct Binary Tree from Preorder and Inorder Traversal]]  | [[build_tree.py]]                 |     1 |
| 104 | [[https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/][Maximum Depth of Binary Tree]]                               | [[max_depth.py]]                  |     1 |
| 103 | [[https://leetcode-cn.com/problems/binary-tree-zigzag-level-order-traversal/][Binary Tree Zigzag Level Order Traversal]]                   | [[zigzag_order.py]]               |     1 |
| 102 | [[https://leetcode-cn.com/problems/binary-tree-level-order-traversal/][LevelOrder]]                                                 | [[level_order.py]]                |     1 |
| 101 | [[https://leetcode-cn.com/problems/symmetric-tree/][Symmetric Tree]]                                             | [[is_symmetric.py]]               |       |
| 100 | [[https://leetcode-cn.com/problems/same-tree/][Same Tree]]                                                  | [[same_tree.py]]                  |     3 |
|  99 | [[https://leetcode-cn.com/problems/recover-binary-search-tree/][Recover Binary Search Tree]]                                 | [[recover_bst.py]]                |     1 |
|  98 | [[https://leetcode-cn.com/problems/validate-binary-search-tree/][Validate Binary Search Tree]]                                | [[is_valid_bst.py]]               |     8 |
|  97 | [[https://leetcode-cn.com/problems/interleaving-string/][Interleaving String]]                                        | [[interleaving_string.py]]        |       |
|  96 | [[https://leetcode-cn.com/problems/unique-binary-search-trees/][Unique Binary Search Trees]]                                 | [[unique_binary_search_tree2.py]] |       |
|  95 | [[https://leetcode-cn.com/problems/unique-binary-search-trees-ii/][Unique Binary Search Trees2]]                                | [[unique_binary_search_tree.py]]  |       |
|  94 | [[https://leetcode-cn.com/problems/binary-tree-inorder-traversal/][Binary Tree Inorder Traversal]]                              | [[inorder_traversal.py]]          |       |
|  93 | [[https://leetcode-cn.com/problems/restore-ip-addresses/][Restore IP Address]]                                         | [[restore_ip_address.py]]         |       |
|  92 | [[https://leetcode-cn.com/problems/reverse-linked-list-ii/][Reverse Linked List 2]]                                      | [[reverse_linked_list.py]]        |       |
|  91 | [[https://leetcode-cn.com/problems/decode-ways/][Decode Ways]]                                                | [[decode_ways.py]]                |       |
|  90 | [[https://leetcode-cn.com/problems/subsets-ii/][Subsets 2]]                                                  | [[subsets_2.py]]                  |       |
|  89 | [[https://leetcode-cn.com/problems/gray-code/][Gray Code]]                                                  | [[gray_code.py]]                  |       |
|  88 | [[https://leetcode-cn.com/problems/merge-sorted-array/][Merge Sorted Array]]                                         | [[merge_sorted_array.py]]         |       |
|  86 | [[https://leetcode-cn.com/problems/partition-list/][Partition List]]                                             | [[partition_list.py]]             |       |
|  85 | [[https://leetcode-cn.com/problems/maximal-rectangle/][Maximal Rectangle]]                                          | [[maximal_rectangle.py]]          |       |
|  84 | [[https://leetcode-cn.com/problems/largest-rectangle-in-histogram/][Largest Rectangle in Histogram]]                             | [[largest_rectangle_area.py]]     |       |
|  83 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/][Remove Duplicates from Sorted Arrays 3]]                     | [[remove_duplicates4.py]]         |       |
|  82 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/][Remove Duplicates from Sorted Arrays 2]]                     | [[remove_duplicates3.py]]         |       |
|  81 | [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/][Search in Rotated Sorted Arrays 2]]                          | [[search_in_sorted_array2.py]]    |       |
|  80 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/][Remove Duplicates from Sorted Arrays]]                       | [[remove_duplicates2.py]]         |       |
|  79 | [[https://leetcode-cn.com/problems/word-search/][Word Search]]                                                | [[word_search.py]]                |       |
|  78 | [[https://leetcode-cn.com/problems/subsets/][Subsets]]                                                    | [[subsets.py]]                    |       |
|  77 | [[https://leetcode-cn.com/problems/combinations/][Combinations]]                                               | [[combine.py]]                    |       |
|  76 | [[https://leetcode-cn.com/problems/minimum-window-substring/][Minimum Window Substring]]                                   | [[min_window.py]]                 |       |
|  75 | [[https://leetcode-cn.com/problems/sort-colors/submissions/][Sort Color]]                                                 | [[sort_color.py]]                 |       |
|  74 | [[https://leetcode-cn.com/problems/search-a-2d-matrix/][Search a 2D Matrix]]                                         | [[search_matrix.py]]              |       |
|  73 | [[https://leetcode-cn.com/problems/set-matrix-zeroes/][Set Matrix Zeros]]                                           | [[set_zeros.py]]                  |       |
|  72 | [[https://leetcode-cn.com/problems/edit-distance/][Edit Distance]]                                              | [[edit_distance.py]]              |       |
|  71 | [[https://leetcode-cn.com/problems/simplify-path/][Simplify Path]]                                              | [[simplify_path.py]]              |       |
|  70 | [[https://leetcode-cn.com/problems/climbing-stairs/][Climbing Stairs]]                                            | [[climbing_stairs.py]]            |       |
|  69 | [[https://leetcode-cn.com/problems/sqrtx/][Sqrt(x)]]                                                    | [[my_sqrt.py]]                    |       |
|  68 | [[https://leetcode-cn.com/problems/text-justification/][Text Justification]]                                         | [[text_justification.py]]         |       |
|  67 | [[https://leetcode-cn.com/problems/add-binary/][Add Binary]]                                                 | [[add_binary.py]]                 |       |
|  66 | [[https://leetcode-cn.com/problems/plus-one/][Plus One]]                                                   | [[plus_one.py]]                   |       |
|  65 | [[https://leetcode-cn.com/problems/valid-number/][Valid Number]]                                               | [[valid_number.py]]               |       |
|  64 | [[https://leetcode-cn.com/problems/minimum-path-sum/][Minimum Path Sum]]                                           | [[min_path_sum.py]]               |       |
|  63 | [[https://leetcode-cn.com/problems/unique-paths-ii/][Unique Paths 2]]                                             | [[unique_path2.py]]               |       |
|  62 | [[https://leetcode-cn.com/problems/unique-paths/submissions/][Unique Paths]]                                               | [[unique_path.py]]                |       |
|  61 | [[https://leetcode-cn.com/problems/rotate-list/][Rotate List]]                                                | [[rotate_list.py]]                |       |
|  60 | [[https://leetcode-cn.com/problems/permutation-sequence/][Permutation Sequence]]                                       | [[permutation_sequence.py]]       |       |
|  59 | [[https://leetcode-cn.com/problems/spiral-matrix-ii/][Spiral Matrix 2]]                                            | [[generate_matrix.py]]            |       |
|  58 | [[https://leetcode-cn.com/problems/length-of-last-word/][Length of Last Word]]                                        | [[length_of_last_word.py]]        |       |
|  57 | [[https://leetcode-cn.com/problems/insert-interval/][Insert Interval]]                                            | [[insert_intervals.py]]           |       |
|  56 | [[https://leetcode-cn.com/problems/merge-intervals/][Merge Intervals]]                                            | [[merge_intervals.py]]            |       |
|  55 | [[https://leetcode-cn.com/problems/jump-game/][Jump Game]]                                                  | [[jump_game.py]]                  |       |
|  54 | [[https://leetcode-cn.com/problems/spiral-matrix/][Spiral Matrix]]                                              | [[spiral_order.py]]               |       |
|  53 | [[https://leetcode-cn.com/problems/maximum-subarray/][Maximum Subarray]]                                           | [[max_sub_array.py]]              |       |
|  52 | [[https://leetcode-cn.com/problems/n-queens-ii/][N Queens 2]]                                                 | [[solve_n_queens_2.py]]           |       |
|  51 | [[https://leetcode-cn.com/problems/n-queens/][N Queens]]                                                   | [[solve_n_queens.py]]             |       |
|  50 | [[https://leetcode-cn.com/problems/powx-n/submissions/][Pow]]                                                        | [[my_pow.py]]                     |       |
|  49 | [[https://leetcode-cn.com/problems/group-anagrams/][group_anagrams.py]]                                          | [[group_anagrams.py]]             |       |
|  48 | [[https://leetcode-cn.com/problems/rotate-image/][Rotate Image]]                                               | [[rotate.py]]                     |       |
|  47 | [[https://leetcode-cn.com/problems/permutations-ii/submissions/][Permutations 2]]                                             | [[permute_2.py]]                  |       |
|  46 | [[https://leetcode-cn.com/problems/permutations/submissions/][Permutations]]                                               | [[permute.py]]                    |       |
|  45 | [[https://leetcode-cn.com/problems/jump-game-ii/submissions/][Jump Game 2]]                                                | [[jump_game_2.py]]                |       |
|  44 | [[https://leetcode-cn.com/problems/wildcard-matching/submissions/][Wildcard Matching]]                                          | [[wildcard_matching.py]]          |       |
|  43 | [[https://leetcode-cn.com/problems/multiply-strings/][Multiply Strings]]                                           | [[multiply_strings.py]]           |       |
|  42 | [[https://leetcode-cn.com/problems/trapping-rain-water/submissions/][Trapping Rain Water]]                                        | [[trapping_rain_water.py]]        |       |
|  41 | [[https://leetcode-cn.com/problems/first-missing-positive/][First Missing Positive]]                                     | [[first_missing_positive.py]]     |       |
|  40 | [[https://leetcode-cn.com/problems/combination-sum-ii/][Combination Sum 2]]                                          | [[combination_sum2.py]]           |       |
|  39 | [[https://leetcode-cn.com/problems/combination-sum/][Combination Sum]]                                            | [[combination_sum.py]]            |       |
|  38 | [[https://leetcode-cn.com/problems/count-and-say/submissions/][Count and Say]]                                              | [[count_and_say.py]]              |       |
|  37 | [[https://leetcode-cn.com/problems/sudoku-solver/][Sudoku Solver]]                                              | [[solve_sodoku.py]]               |       |
|  36 | [[https://leetcode-cn.com/problems/valid-sudoku/][Valid Sudoku]]                                               | [[valid_sudoku.py]]               |       |
|  35 | [[https://leetcode-cn.com/problems/search-insert-position/][Search insert Position]]                                     | [[search_insert.py]]              |       |
|  34 | [[https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/submissions/][Find First and Last Element in sorted array]]                | [[search_range.py]]               |       |
|  33 | [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array/][Search in Rotated Sorted Array]]                             | [[search_in_sorted_array.py]]     |       |
|  32 | [[https://leetcode-cn.com/problems/longest-valid-parentheses/][Largest Valid Parentheses]]                                  | [[largest_valid_parenteses.py]]   |       |
|  31 | [[https://leetcode-cn.com/problems/next-permutation/][Next Permutation]]                                           | [[next_permutation.py]]           |       |
|  30 | [[https://leetcode-cn.com/problems/substring-with-concatenation-of-all-words/submissions/][Substring with Concatenation of All Words]]                  | [[find_substring.py]]             |       |
|  29 | [[https://leetcode-cn.com/problems/divide-two-integers/][Divide Two Integers]]                                        | [[divide.py]]                     |       |
|  28 | [[https://leetcode-cn.com/problems/implement-strstr/][Implement strStr()]]                                         | -                             |       |
|  27 | [[https://leetcode-cn.com/problems/remove-element/][Remove Element]]                                             | -                             |       |
|  26 | [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/][Remove Duplicates from Sorted Array]]                        | [[remove_duplicates.py]]          |       |
|  25 | [[https://leetcode-cn.com/problems/reverse-nodes-in-k-group/][Reverse Nodes in k-Group]]                                   | [[reverse_k_group.py]]            |       |
|  24 | [[https://leetcode-cn.com/problems/swap-nodes-in-pairs/][Swap Nodes in Pairs]]                                        | [[swap_pairs.py]]                 |       |
|  23 | [[https://leetcode-cn.com/problems/merge-k-sorted-lists/][Merge k Sorted Lists]]                                       | [[merge_k_list.py]]               |       |
|  22 | [[https://leetcode-cn.com/problems/generate-parentheses/][Generate Parentheses]]                                       | [[generate_parenthesis.py]]       |       |
|  21 | [[https://leetcode-cn.com/problems/merge-two-sorted-lists/][Merge Two Sorted Lists]]                                     | [[merge_two_list.py]]             |       |
|  20 | [[https://leetcode-cn.com/problems/valid-parentheses/][Valid Parentheses]]                                          | [[is_valid.py]]                   |       |
|  19 | [[https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/][Remove Nth Node From End of List]]                           | [[remove_nth_from_end.py]]        |       |
|  18 | [[https://leetcode-cn.com/problems/4sum/][4Sum]]                                                       | [[four_sum.py]]                   |       |
|  17 | [[https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/][Letter Combination of a Phone Number]]                       | [[letter_combination.py]]         |       |
|  16 | [[https://leetcode-cn.com/problems/3sum-closest/][3Sum Closest]]                                               | [[three_sum_closest.py]]          |       |
|  15 | [[https://leetcode-cn.com/problems/3sum/][3Sum]]                                                       | [[three_sum.py]]                  |       |
|  14 | [[https://leetcode-cn.com/problems/longest-common-prefix/][Longest Common Prefix]]                                      | [[longest_common_prefix.py]]      |       |
|  13 | [[https://leetcode-cn.com/problems/roman-to-integer/][Roman to Integer]]                                           | [[roman_to_int.py]]               |       |
|  12 | [[https://leetcode-cn.com/problems/integer-to-roman/][Integer to Roman]]                                           | [[int_to_roman.py]]               |       |
|  11 | [[https://leetcode-cn.com/problems/container-with-most-water/][Container With Most Water]]                                  | [[max_area.py]]                   |       |
|  10 | [[https://leetcode-cn.com/problems/regular-expression-matching/][Regular Expression Matching]]                                | [[is_match.py]]                   |       |
|   9 | [[https://leetcode-cn.com/problems/palindrome-number/][Palindrome]]                                                 | [[is_palindrome.py]]              |       |
|   8 | [[https://leetcode-cn.com/problems/string-to-integer-atoi/][String to Integer]]                                          | [[my_atoi.py]]                    |       |
|   7 | [[https://leetcode-cn.com/problems/reverse-integer/][Reverse Integer]]                                            | [[reverse_int.py]]                |       |
|   6 | [[https://leetcode-cn.com/problems/zigzag-conversion/][ZigZag Conversion]]                                          | [[zigzag-conversion.py]]          |       |
|   5 | [[https://leetcode-cn.com/problems/longest-palindromic-substring/][Longest Palindromic SubString]]                              | [[longest_palindrome.py]]         |       |
|   4 | [[https://leetcode-cn.com/problems/median-of-two-sorted-arrays/][Median of Two Sorted Arrays]]                                | [[find_median_sorted_array.py]]   |       |
|   3 | [[https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/][Longest Substring Without Repeating Characters]]             | [[longest_substr.py]]             |       |
|   2 | [[https://leetcode-cn.com/problems/add-two-numbers/][Add Two Numbers]]                                            | -                             |       |
|   1 | [[https://leetcode-cn.com/problems/two-sum/][Two Sum]]                                                    | [[twosum.py]]                     |       |

** 思路笔记
*** 152 Maximum Product Subarray
最开始想到的 DP 转移方程为：
\begin{equation*}
dp(e) = \max \begin{case}
dp(e-1), \\
nums[e-1], \\
connected_product_from_nums[e-1]
\end{case}
\end{equation*}

但其中计算 =connected_product_from_nums= 仍然需要 =O(n^2)=

题解中提出的方法是，对当前位置的数进行分类讨论，如果当前位置是正数，那么需要前面乘积最大的正数；如果当前位置是负数，需要前面乘积最小（最好是负数）的负数。因此可以有两个 DP 转移方程。
\begin{equation*}
f_{\max}(i) = \max(f_{\max}(i-1) \times a_i, f_{\min}(i-1) \times a_i, a_i)
f_{\min}(i) = \min(f_{\max}(i-1) \times a_i, f_{\min}(i-1) \times a_i, a_i)
\end{equation*}

*** 149 Max Points on a Line
用最笨的方法穷举可以做出来……
题目不难，但有点恶心人，尤其是测试案例中还有小数，最简单的方法是直接转成分数去计算。
测试案例通过为 39/41，不想去尝试了。

*** 147 Insertion Sort List
由于链表的特殊性，在交换两个节点的时候需要用到相关节点的上一个节点，因此我们在排序过程中可以使用“上一个节点的 next 节点”来进行比较，可以方便的进行交换。

比较不认可题解中部分使用 =tail= 指针的方式来加速，这样违背了此题的出题意愿。

*** 143 Reorder List
- 使用快慢指针找到中间节点
- 线性时间内逆转链表
- 将两列表合并

*** 141 Linked List Cycle
简单的方法非常容易实现，而难一点的方法如果你考过研，啃过王道那本数据结构（如果我没记错的话），这种方法在里面出现过。思路就是利用快慢指针，如果有环，那么快指针迟早可以从后面超过慢指针。

*** 130 Surrounded Regions
技巧：从边缘开始检测与 ‘O’ 相关的 ‘O’ 元素，并在原表中标记为 ‘U’，这些点是不会发生变化的。

最后遍历一次元素，将所有 ‘U’ 元素更改为 ‘O’，将所有 ‘O’ 元素更改为 ‘X’ 即可。

*** 128 Longest Consecutive Sequence
参考 [[https://leetcode-cn.com/problems/longest-consecutive-sequence/solution/zui-chang-lian-xu-xu-lie-by-leetcode-solution/][官方题解]]

*** 126 Word Ladder II
BFS 方法参考 [[https://leetcode-cn.com/problems/word-ladder-ii/solution/dan-ci-jie-long-ii-by-leetcode-solution/][官方题解]]

最开始直接使用递归的方法去做的，看了题解才发现可以把这个问题转化为树的广度遍历问题。非常有趣。但我的实现不知道哪里还有问题，一直超时，以后有时间再琢磨吧。

*** 124 Binary Tree Maximum Path Sum
本题解答参考官方题解： [[https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/solution/er-cha-shu-zhong-de-zui-da-lu-jing-he-by-leetcode-/][二叉树中的最大路径和]]

几个抽象的地方：
1. 路径和。从树的一个节点连接到另一个节点所结果的节点权值之和。
2. 树的最大路径和。树中所有路径和的最大值。

代码中需要注意的点：
1. =max_sum= 设定为 =-inf=
2. =gain= 的含义为：此节点能向上做多少贡献，因此，存在两种路径，左中和右中，取最大

*** 114 Flatten Binary Tree to Linked Tree
只想到了最直接的方法，就是先序遍历然后构建单链表。从题解中学到了两种方法：
1. 特殊的后序遍历
如果在先序遍历的基础上直接原地改动链表，会丢失原链表的右子树，所以我们采用从后向前遍历的方法原地改动链表。先序遍历的顺序为中左右，其逆向为右左中，是一种特殊的后序遍历。因此可以按照这个遍历，每次遍历到新节点，使新节点的右连接指向上一个节点。
2. 保留右子树的引用
既然先序遍历可能会丢失右子树，那每次就保存右子树到新树的最右节点上即可。

*** 109 Convert Sorted List to Binary Search Tree
自己想到的方法挺一般的：先将单链表遍历一遍，转换为数组，可以随机访问每个元素，然后再构造二叉搜索树。

查看题解之后，官方第三个题解思路确实新颖：[[https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/solution/you-xu-lian-biao-zhuan-huan-er-cha-sou-suo-shu-by-/][有序链表转二叉搜索树]]

它利用了二叉树的中序遍历即是一个有序数组的性质，先构建左子树，然后构建根节点，最后构建右子树，递归的完成了从有序链表到二叉搜索树的转换。

*** 99 Recover Binary Search Tree
因为二叉搜索树的中序排序数组是有序数组，因此，这个问题可以分解为两个子问题：
1. 中序排序
2. 查找一次交换元素的有序数组中交换的那两个元素，并还原

*** 95 Unique Binary Search Tree
最开始我想到的是方法是：从 $1 \cdots n$ 中依次取数 $i$ ，将 $i$ 插入到已经排序好的二叉查询树 $1 \cdots i-1 \cdots i+1 \cdots n$ 中。依据此思想可以写出递推式，我也做了实现，但是结果会有重复，暂时没有想到去重的方法。

第二种方法是看了题解，恍然大悟，利用二叉查询树的性质，比 $i$ 小的数都在 $i$ 的左边，比 $i$ 大的数都在 $i$ 的右边。

*** 91 Decode Ways
本题解法参考自 [[https://leetcode-cn.com/problems/decode-ways/solution/c-wo-ren-wei-hen-jian-dan-zhi-guan-de-jie-fa-by-pr/][algos]] 。

另外，我自己也有一种 DP 的解法，但是和上诉方法相比实现起来太麻烦了。
#+BEGIN_CENTER
#+ATTR_HTML: :width 80%
[[file:../img/91_1.png]]
#+END_CENTER
#+BEGIN_CENTER
#+ATTR_HTML: :width 80%
[[file:../img/91_2.png]]
#+END_CENTER

*** 85 Maximal Rectangle
如果我们将这个矩形按行来分割，那么，每行之上的数据都可以看作是 #84 中的一个矩形图问题。

此方法看过题解，[[https://leetcode-cn.com/problems/maximal-rectangle/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-1-8/][详细通俗的思路分析]]。

*** 84 Largest Rectangle in Histogram
*** 76 Minimum Window Substring
这里我一直超时的问题是，在更新左指针时，没有记录上一次更新右指针时已经记录的现有字符信息。

*** 75 Color Search
想一个小技巧，能在一次遍历中完成题目要求。可以考虑三个标志位，分别记录三个颜色的第一次出现的位置，在此基础上可以思考出正解。

*** 72 Minimum Edit Distance
Edit Distance 是经典的动态规划问题，主要思想就是：将两个单词 =word1, word2= 最后一位对齐，从后向前比较。如果两个单词最后一位相同，那么多这一位并不影响 Edit Distance，所以其 ED 等于 =ED(m-1, n-1)= ；如果最后一位不同，那么多的一位可能有三种情况：
- 被删除 =ED(m-1, n)=
- 修改 =ED(m-1, n-1)=
- 被添加 =ED(m, n-1)=

*** 46 47 Permutation
动态规划和剪枝优化的问题。

*** 45 Jump Game 2
贪心问题。这个动态规划问题需要使用贪心算法解决才能满足时间条件。

贪心思想：每次跳的位置要么是直接达到目的地，要么是下次能跳的最远的地方。

*** 44 Wildcard Matching
本题是动态规划问题，思考写出其迭代式：

\[
dp(i, j) = \begin{cases}
dp(i+1, j+1), & \text{if } s[i] == p[j] \text{ or } p[j] == '?'; \\
False, & \text{if } s[i] \neq p[j]; \\
dp(i, j+1) \text{ or } dp(i+1, j) \text{ or } dp(i+1, j+1), & \text{if } p[j] == '*'.
\end{cases}
\]

其中，\(dp(i, j)\)表示\(s[i:]\)与\(p[j:]\)是否匹配。

如果直接使用递归方法，不能通过所有测试用例，原因是耗时过多。改进的方法有：
- 使用缓存，保存已经计算过的 dp 值
- 使用迭代方法

迭代方法需要添加多的一行和一列的表格。不妨设有 =len(s)+1= 列和 =len(p)+1= 行；那么：
- 第 =len(s)+1= 列表示 s 序列为空时， =p[j:]= 是否可以匹配（只有当 =p[j:]= 都是 '*'时可以匹配）
- 第 =len(p)+1= 行表示 p 序列为空时，能否匹配 s 序列，当然都是 False

*** 42 Trapping Rain Water
思路：

\begin{equation*}
\begin{split}
res[i] = \max(0, \min(\max(left), \max(right)) - heights[i])
\end{split}
\end{equation*}

找左边、右边最大高度可以使用动态规划。

\begin{equation*}
\begin{split}
left[i] &= \max(height[i-1], left[i-1])\\
right[i] &= \max(height[i+1], right[i+1])
\end{split}
\end{equation*}

*** 41 First Missing Positive
这道题算是技巧题目，没有固定的题型。
- 此题的题解范围为：1 ~ n+1
- 可以原地做标记表示某个数是否在数组中出现过
- 使用位置 0 判断数字 n 是否出现过

*** 40 Combination Sum 2
典型的动态规划题型。

\[
dp(t, p) = \begin{cases}
dp(t-nums[p], p-1).append(nums[p]) \\
dp[t, p - 1]
\end{cases}
\]

如果使用迭代算法需要二维数组保存中间结果。

** 未完成的问题
*** 超时
- 126
- 132
- 140 (Official Resolved method also time out)

*** 不会

*** 暂时不想做
- 127
- 149
